{
  "plugins": [
    // Syntax
    "syntax-async-functions",
    "syntax-async-generators",
    "syntax-class-constructor-call",
    "syntax-class-properties",
    "syntax-decorators",
    "syntax-do-expressions",
    "syntax-exponentiation-operator",
    "syntax-export-extensions",
    "syntax-flow",
    "syntax-function-bind",
    "syntax-jsx",
    "syntax-object-rest-spread",
    "syntax-trailing-function-commas",

    // BUG: This needs to be the first transform
    "transform-class-properties",

    // ES3
    "transform-es3-member-expression-literals",
    "transform-es3-property-literals",

    // ES5
    "transform-es5-property-mutators",

    // ES2015 (ES6+)
    "transform-es2015-arrow-functions",
    "transform-es2015-block-scoped-functions",
    "transform-es2015-block-scoping",
    "transform-es2015-classes",
    "transform-es2015-computed-properties",
    "transform-es2015-constants",
    "transform-es2015-destructuring",
    "transform-es2015-for-of",
    "transform-es2015-function-name",
    "transform-es2015-literals",
    "transform-es2015-object-super",
    "transform-es2015-parameters",
    "transform-es2015-shorthand-properties",
    "transform-es2015-spread",
    "transform-es2015-sticky-regex",
    "transform-es2015-template-literals",
    "transform-es2015-typeof-symbol",
    "transform-es2015-unicode-regex",
    "transform-es2015-modules-commonjs",

    // ES7+
    "transform-async-to-generator",
    "transform-class-constructor-call",
    "transform-decorators",
    "transform-do-expressions",
    "transform-exponentiation-operator",
    "transform-export-extensions",
    "transform-function-bind",
    "transform-object-rest-spread",

    // Strict Mode
    "transform-strict-mode",

    // This plugin transforms undefined into void 0 which returns undefined
    // regardless of if it's been reassigned (its also a tiny bit smaller).
    "transform-undefined-to-void",
  ],
  "env": {
    "development": {
      "plugins": [
        // Flow (type checking)
        "typecheck",
      ]
    },
    "production": {
      "plugins": [
        // Remove flow types
        "transform-flow-strip-types",

        // Minification / Optimization
        "transform-member-expression-literals",
        "transform-merge-sibling-variables",
        "transform-minify-booleans",
        "transform-property-literals",
        "transform-remove-console",
        "transform-remove-debugger"
      ]
    }
  }
}
